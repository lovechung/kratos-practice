// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CarColumns holds the columns for the "car" table.
	CarColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "registered_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// CarTable holds the schema information for the "car" table.
	CarTable = &schema.Table{
		Name:       "car",
		Columns:    CarColumns,
		PrimaryKey: []*schema.Column{CarColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "car_user_cars",
				Columns:    []*schema.Column{CarColumns[3]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CarTable,
		UserTable,
	}
)

func init() {
	CarTable.ForeignKeys[0].RefTable = UserTable
	CarTable.Annotation = &entsql.Annotation{
		Table: "car",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
